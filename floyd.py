# We represent infinity as -1.

W = [
[0,12,-1,5,-1,-1,5,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,-1,-1],
[12,0,2,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,2,0,5,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[5,8,5,0,4,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,8,4,0,2.5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,2.5,0,4.5,5,-1,-1,-1,7.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3.5],
[5,-1,-1,6,4,4.5,0,-1,4.9,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,5,-1,0,4,-1,3.8,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3.5],
[-1,-1,-1,-1,-1,-1,4.9,4,0,3.2,3.5,-1,-1,-1,-1,-1,-1,7.8,-1,-1,-1,-1,-1,-1,-1,-1,3.9],
[4,-1,-1,-1,-1,-1,4,-1,3.2,0,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,8.1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,3.8,3.5,-1,0,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,7.5,-1,4,-1,-1,-1,0,6.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6.5,0,3.1,-1,2.6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,3.1,0,2.3,-1,-1,5.5,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.3,0,2.8,-1,-1,3,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.6,-1,2.8,0,2.1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.1,0,-1,2,-1,2.5,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,7.8,7,-1,-1,-1,5.5,-1,-1,-1,0,3.4,3,-1,4.9,-1,-1,6.2,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,-1,2,3.4,0,0.5,-1,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0.5,0,2.3,-1,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.5,-1,-1,2.3,0,6.4,-1,-1,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4.9,-1,-1,6.4,0,2,-1,-1,2.6,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,0,4.6,-1,-1,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4.6,0,12,6.8,-1],
[10,-1,-1,-1,-1,-1,-1,-1,-1,8.1,-1,-1,-1,-1,-1,-1,-1,6.2,-1,-1,-1,-1,-1,12,0,3.2,-1],
[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.6,-1,6.8,3.2,0,-1],
[-1,-1,-1,-1,-1,3.5,-1,3.5,3.9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0]]


P = [[-1] * len(W) for _ in range(len(W))]
# This also works
# P = []
# for i in range(len(W)):
#     P.append([-1] * len(W))
# ----
# Be Caution!!!
# P = [[-1] * len(W)] * len(W)  # doesn't work
# Though the first `*` leads to copies of value, 
# the second `*` leads to copies of reference.



print("At the beginning, W is")
for _ in range(len(W)): print(W[_])
print("\n")

fullIndexList = [0] * len(W)
for k in range(len(W)):
    fullIndexList[k] = k

for skip in range(0,len(W)):      # n loops

    indexList = fullIndexList[:]  # hard-copy
    indexList.pop(skip)           # eliminate the "skip" 

    print("Skiping", skip, ". We are working on", indexList)
    
    for i in indexList:      # (n-1) loops
        for j in indexList:  # (n-1) loops
            
            print("W[ %d ][ %d ] vs W[ %d ][ %d ] + W[ %d ][ %d ];  %2d vs %2d + %2d" %(i, j, i, skip, skip, j, W[i][j], W[skip][j], W[i][skip]), end=';  ')
            
            if W[skip][j] != -1 and W[i][skip] != -1:  # they are normal numbers
                if W[i][j] == -1: # originally an Inf
                    W[i][j] = W[skip][j] + W[i][skip]
                    print("choose W[ %d ][ %d ] =  %2d + %2d" %(i, j, W[skip][j], W[i][skip]))
                    if (skip > P[i][j]):
                        P[i][j] = skip
                        print("P[ %d ][ %d ] =          %d" %(i, j,skip))
                else:  # they all are normal numbers, we have to compare  
                    if W[skip][j] + W[i][skip] < W[i][j]:    
                        W[i][j] = W[skip][j] + W[i][skip]
                        print("choose W[ %d ][ %d ] =  %2d + %2d" %(i, j, W[skip][j], W[i][skip]))
                        if (skip > P[i][j]):
                            P[i][j] = skip
                            print("P[ %d ][ %d ] =          %d" %(i, j,skip))
                    else:
                        print("choose W[ %d ][ %d ] =  %2d" %(i, j, W[i][j]))
            else: # there are at least one Inf; impossiple for a shorter path
                print("choose W[ %d ][ %d ] =  %2d" %(i, j, W[i][j]))
    print("\nNow, D is")
    for _ in range(len(W)): print(str(W[_]) + ",")
    print("\nThe P matrix is")
    for _ in range(len(P)): print(str(P[_]) + ",")
    print()
