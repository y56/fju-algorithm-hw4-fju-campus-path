# -*- coding: utf-8 -*-
"""
Created on Sun Jun  9 17:13:15 2019

@author: y56
"""
P = [
[-1, -1, 3, -1, 3, 6, -1, 9, 9, -1, 9, 9, 13, 10, 13, 18, 18, 9, 17, 17, 19, 25, 25, 25, -1, 24, 9],
[-1, -1, -1, 2, 2, 4, 3, 5, 6, 0, 7, 5, 11, 10, 13, 12, 18, 9, 17, 17, 19, 25, 25, 25, 0, 24, 5],
[3, -1, -1, -1, -1, 4, 3, 5, 6, 3, 7, 5, 11, 10, 13, 12, 18, 9, 17, 17, 19, 25, 25, 25, 3, 24, 5],
[-1, 2, -1, -1, -1, 4, -1, 5, 6, 0, 8, 5, 11, 10, 13, 12, 18, 9, 17, 17, 19, 25, 25, 25, 0, 24, 5],
[3, 2, -1, -1, -1, -1, -1, 5, 6, 6, 7, 5, 11, 10, 13, 12, 18, 9, 17, 17, 19, 17, 21, 25, 9, 24, 5],
[6, 4, 4, 4, -1, -1, -1, -1, 26, 6, 7, -1, 11, 10, 13, 12, 15, 26, 14, 26, 26, 26, 26, 25, 9, 24, -1],
[-1, 3, 3, -1, -1, -1, -1, 8, -1, -1, 8, 5, 13, 10, 13, 14, 18, 9, 17, 17, 19, 17, 21, 25, 9, 24, 5],
[9, 5, 5, 5, 5, -1, 8, -1, -1, 8, -1, -1, 11, 10, 13, 14, 15, 8, 14, 18, 19, 17, 21, 22, 9, 24, -1],
[9, 6, 6, 6, 6, 26, -1, -1, -1, -1, -1, 7, 13, 10, 13, 14, 18, -1, 17, 17, 19, 17, 21, 22, 9, 24, -1],
[-1, 0, 3, 0, 6, 6, -1, 8, -1, -1, 8, 8, 13, 10, 13, 18, 18, -1, 17, 17, 19, 17, 21, 25, -1, 24, 8],
[9, 7, 7, 8, 7, 7, 8, -1, -1, 8, -1, 7, 13, -1, 13, 14, 15, 13, 14, 18, 19, 17, 21, 22, 9, 21, 7],
[9, 5, 5, 5, 5, -1, 5, -1, 7, 8, 7, -1, -1, 12, 13, 12, 15, 13, 16, 18, 16, 17, 21, 22, 9, 24, 7],
[13, 11, 11, 11, 11, 11, 13, 11, 13, 13, 13, -1, -1, -1, 13, -1, 15, 13, 16, 18, 16, 17, 21, 22, 17, 21, 11],
[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, -1, 12, -1, -1, -1, 14, 15, -1, 14, 18, 19, 17, 21, 22, 17, 21, 10],
[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, -1, -1, -1, 15, 18, -1, 18, 19, 18, 21, 22, 18, 21, 13],
[18, 12, 12, 12, 12, 12, 14, 14, 14, 18, 14, 12, -1, 14, -1, -1, -1, 18, 16, 18, 16, 20, 21, 22, 18, 21, 14],
[18, 18, 18, 18, 18, 15, 18, 15, 18, 18, 15, 15, 15, 15, 15, -1, -1, 18, -1, 18, -1, 20, 21, 22, 18, 21, 18],
[9, 9, 9, 9, 9, 26, 9, 8, -1, -1, 13, 13, 13, -1, 18, 18, 18, -1, -1, -1, 19, -1, 21, 22, -1, 21, 8],
[17, 17, 17, 17, 17, 14, 17, 14, 17, 17, 14, 16, 16, 14, -1, 16, -1, -1, -1, -1, 19, 17, 21, 22, 17, 21, 17],
[17, 17, 17, 17, 17, 26, 17, 18, 17, 17, 18, 18, 18, 18, 18, 18, 18, -1, -1, -1, -1, 17, 21, 22, 17, 21, 17],
[19, 19, 19, 19, 19, 26, 19, 19, 19, 19, 19, 16, 16, 19, 19, 16, -1, 19, 19, -1, -1, -1, 21, 22, 19, 21, 19],
[25, 25, 25, 25, 17, 26, 17, 17, 17, 17, 17, 17, 17, 17, 18, 20, 20, -1, 17, 17, -1, -1, -1, 22, 25, -1, 17],
[25, 25, 25, 25, 21, 26, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, -1, -1, 25, 21, 21],
[25, 25, 25, 25, 25, 25, 25, 22, 22, 25, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, -1, -1, 25, -1, 22],
[-1, 0, 3, 0, 9, 9, 9, 9, 9, -1, 9, 9, 17, 17, 18, 18, 18, -1, 17, 17, 19, 25, 25, 25, -1, -1, 9],
[24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 21, 24, 21, 21, 21, 21, 21, 21, 21, 21, 21, -1, 21, -1, -1, -1, 24],
[9, 5, 5, 5, 5, -1, 5, -1, -1, 8, 7, 7, 11, 10, 13, 14, 18, 8, 17, 17, 19, 17, 21, 22, 9, 24, -1]]

def mypath(q, r, P):
    if P[q][r] != -1:
        mypath(q, (P[q][r]), P)
        print("            " + str(P[q][r]))
        mypath((P[q][r]), r, P)

start = 12  # start from here 

goal = 1  # end at here

print("start from: " + str(start))
print("go through:")
mypath(start, goal, P)
print()
print("end at:     " + str(goal))
